import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get addToCart => "Add To Cart";
  String get additionalInformation => "Additional Information";
  String get address => "Address";
  String get apply => "Apply";
  String get arabic => "Arabic";
  String get backToShop => "Back to Shop";
  String get bagsCollections => "Gears Collections";
  String get blog => "Blog";
  String get buyNow => "Buy Now";
  String get byCategory => "By Category";
  String get byPrice => "By Price";
  String get cancel => "Cancel";
  String get cart => "Cart";
  String get checkout => "Checkout";
  String get chooseYourPaymentMethod => "Choose your payment method";
  String get city => "City";
  String get cityIsRequired => "The city field is required";
  String get clearCart => "Clear Cart";
  String get close => "Close";
  String get color => "Color";
  String get continueToPayment => "Continue to Payment";
  String get continueToReview => "Continue to Review";
  String get continueToShipping => "Continue to Shipping";
  String get country => "Country";
  String get countryIsRequired => "The country field is required";
  String get darkTheme => "Dark Theme";
  String get description => "Description";
  String get dontHaveAccount => "Don't have an account?";
  String get email => "Email";
  String get emailIsRequired => "The email field is required";
  String get emptyCartSubtitle => "Looks like you haven’t added any items to the bag yet. Start shopping to fill it in.";
  String get emptyWishlistSubtitle => "Tap any heart next to a product to favotite. We’ll save them for you here!";
  String get english => "English";
  String get featureProducts => "Feature Products";
  String get firstName => "First Name";
  String get firstNameIsRequired => "The first name field is required";
  String get generalSetting => "General Setting";
  String get getNotification => "Get Notification";
  String get goBackToAddress => "Go back to address";
  String get goBackToReview => "Go back to review";
  String get goBackToShipping => "Go back to shipping";
  String get items => "items";
  String get itsOrdered => "It's ordered!";
  String get language => "Language";
  String get lastName => "Last Name";
  String get lastNameIsRequired => "The last name field is required";
  String get listMessages => "List Messages";
  String get login => "LogIn";
  String get logout => "Logout";
  String get manCollections => "Man Collections";
  String get myCart => "My Cart";
  String get myWishList => "My Wishlist";
  String get noFavoritesYet => "No favourites yet.";
  String get noInternetConnection => "No internet connection";
  String get noOrders => "No Orders";
  String get noReviews => "No Reviews";
  String get or => "OR";
  String get orderDate => "Order Date";
  String get orderDetail => "Order details";
  String get orderHistory => "Order History";
  String get orderNo => "Order No.";
  String get payment => "Payment";
  String get paymentMethod => "Payment Method";
  String get paymentMethods => "Payment Methods";
  String get phoneIsRequired => "The phone number field is required";
  String get phoneNumber => "Phone number";
  String get placeMyOrder => "Place My Order";
  String get pleaseInput => "Please input fill in all fields";
  String get productAdded => "The product is added";
  String get products => "Products";
  String get rateTheApp => "Rate the app";
  String get readReviews => "Read Reviews";
  String get recentSearches => "Recent Searches";
  String get recents => "Recents";
  String get refundRequest => "Refund Request";
  String get reset => "Reset";
  String get review => "review";
  String get saveToWishList => "Save to Wishlist";
  String get search => "Search";
  String get searchForItems => "Search for Items";
  String get searchingAddress => "Searching Address";
  String get seeAll => "See All";
  String get selectTheColor => "Select the color";
  String get selectTheQuantity => "Select the quantity";
  String get selectTheSize => "Select the size";
  String get settings => "Setting";
  String get share => "Share";
  String get shipping => "Shipping";
  String get shippingAddress => "Shipping Address";
  String get shippingMethod => "Shipping Method";
  String get shop => "Shop";
  String get showAllMyOrdered => "Show All My Ordered";
  String get signInWithEmail => "Sign in with email";
  String get signup => "Sign up";
  String get size => "Size";
  String get startShopping => "Start Shopping";
  String get stateIsRequired => "The state field is required";
  String get stateProvince => "State / Province";
  String get status => "Status";
  String get streetIsRequired => "The street name field is required";
  String get streetName => "Street Name";
  String get subtotal => "Subtotal";
  String get total => "Total";
  String get vietnamese => "Vietnam";
  String get welcome => "Welcome";
  String get womanCollections => "Woman Collections";
  String get youMightAlsoLike => "You might also like";
  String get yourBagIsEmpty => "Your bag is empty";
  String get zipCode => "Zip-code";
  String get zipCodeIsRequired => "The zip code field is required";
}

class $ar extends S {
  const $ar();

  @override
  TextDirection get textDirection => TextDirection.rtl;

  @override
  String get cancel => "إلغاء";
  @override
  String get listMessages => "قائمة الرسائل";
  @override
  String get lastNameIsRequired => "حقل الاسم الأخير مطلوب";
  @override
  String get darkTheme => "موضوع الظلام";
  @override
  String get byPrice => "حسب السعر";
  @override
  String get emptyWishlistSubtitle => "اضغط على أي قلب بجوار المنتج إلى المفضلة. سنقوم بحفظها لك هنا!";
  @override
  String get getNotification => "الحصول على إشعار";
  @override
  String get cart => "عربة التسوق";
  @override
  String get logout => "الخروج";
  @override
  String get recentSearches => "عمليات البحث الأخيرة";
  @override
  String get review => "إعادة النظر";
  @override
  String get signInWithEmail => "تسجيل الدخول مع البريد الإلكتروني";
  @override
  String get english => "الإنجليزية";
  @override
  String get payment => "دفع";
  @override
  String get myWishList => "قائمة امنياتي";
  @override
  String get welcome => "أهلا بك";
  @override
  String get selectTheColor => "اختر اللون";
  @override
  String get myCart => "سلتي";
  @override
  String get firstNameIsRequired => "حقل الاسم الأول مطلوب";
  @override
  String get byCategory => "بالتصنيف";
  @override
  String get continueToReview => "متابعة المراجعة";
  @override
  String get goBackToReview => "العودة إلى المراجعة";
  @override
  String get orderHistory => "تاريخ الطلب";
  @override
  String get featureProducts => "منتجات مميزة";
  @override
  String get itsOrdered => "إنه أمر!";
  @override
  String get backToShop => "العودة إلى متجر";
  @override
  String get countryIsRequired => "حقل البلد مطلوب";
  @override
  String get signup => "سجل";
  @override
  String get size => "بحجم";
  @override
  String get subtotal => "حاصل الجمع";
  @override
  String get emptyCartSubtitle => "يبدو أنك لم تقم بإضافة أي سلع إلى الحقيبة بعد. ابدأ التسوق لملئه.";
  @override
  String get reset => "إعادة تعيين";
  @override
  String get clearCart => "مسح العربة";
  @override
  String get noFavoritesYet => "لا المفضلة حتى الآن.";
  @override
  String get items => "العناصر";
  @override
  String get status => "الحالة";
  @override
  String get lastName => "الكنية";
  @override
  String get city => "مدينة";
  @override
  String get login => "تسجيل الدخول";
  @override
  String get products => "منتجات";
  @override
  String get rateTheApp => "قيم التطبيق";
  @override
  String get goBackToShipping => "العودة إلى الشحن";
  @override
  String get search => "بحث";
  @override
  String get arabic => "عربى";
  @override
  String get paymentMethods => "طرق الدفع";
  @override
  String get addToCart => "أضف إلى السلة";
  @override
  String get goBackToAddress => "العودة إلى العنوان";
  @override
  String get share => "شارك";
  @override
  String get pleaseInput => "يرجى إدخال ملء جميع الحقول";
  @override
  String get bagsCollections => "مجموعات التروس";
  @override
  String get close => "أغلق";
  @override
  String get email => "البريد الإلكتروني";
  @override
  String get searchingAddress => "البحث عن عنوان";
  @override
  String get address => "عنوان";
  @override
  String get placeMyOrder => "ضع طلبي";
  @override
  String get phoneIsRequired => "حقل رقم الهاتف مطلوب";
  @override
  String get vietnamese => "فيتنام";
  @override
  String get dontHaveAccount => "ليس لديك حساب?";
  @override
  String get zipCodeIsRequired => "حقل الرمز البريدي مطلوب";
  @override
  String get streetIsRequired => "حقل اسم الشارع مطلوب";
  @override
  String get shippingAddress => "عنوان الشحن";
  @override
  String get cityIsRequired => "حقل المدينة مطلوب";
  @override
  String get zipCode => "الرمز البريدي";
  @override
  String get country => "بلد";
  @override
  String get manCollections => "مجموعات الرجل";
  @override
  String get youMightAlsoLike => "قد يعجبك ايضا";
  @override
  String get showAllMyOrdered => "عرض كل ما طلبته";
  @override
  String get language => "لغة";
  @override
  String get blog => "مدونة";
  @override
  String get continueToPayment => "متابعة الدفع";
  @override
  String get buyNow => "اشتري الآن";
  @override
  String get shipping => "الشحن";
  @override
  String get productAdded => "يضاف المنتج";
  @override
  String get additionalInformation => "معلومة اضافية";
  @override
  String get settings => "ضبط";
  @override
  String get orderNo => "رقم الطلب";
  @override
  String get shippingMethod => "طريقة الشحن";
  @override
  String get yourBagIsEmpty => "حقيبتك فارغة";
  @override
  String get stateProvince => "الولاية / المقاطعة";
  @override
  String get noInternetConnection => "لا يوجد اتصال بالإنترنت";
  @override
  String get firstName => "الاسم الاول";
  @override
  String get phoneNumber => "رقم الهاتف";
  @override
  String get seeAll => "اظهار الكل";
  @override
  String get paymentMethod => "طريقة الدفع او السداد";
  @override
  String get selectTheQuantity => "اختر الكمية";
  @override
  String get emailIsRequired => "حقل البريد الإلكتروني مطلوب";
  @override
  String get orderDate => "تاريخ الطلب";
  @override
  String get shop => "متجر";
  @override
  String get color => "اللون";
  @override
  String get noReviews => "لم يتم تقديم تعليقات";
  @override
  String get description => "وصف";
  @override
  String get streetName => "اسم الشارع";
  @override
  String get total => "مجموع";
  @override
  String get stateIsRequired => "حقل الدولة مطلوب";
  @override
  String get selectTheSize => "اختر الحجم";
  @override
  String get readReviews => "قراءة التعليقات";
  @override
  String get checkout => "الدفع";
  @override
  String get noOrders => "لا توجد أوامر";
  @override
  String get startShopping => "ابدأ التسوق";
  @override
  String get or => "أو";
  @override
  String get saveToWishList => "حفظ إلى قائمة الأمنيات";
  @override
  String get continueToShipping => "متابعة الشحن";
  @override
  String get apply => "تطبيق";
  @override
  String get searchForItems => "البحث عن العناصر";
  @override
  String get chooseYourPaymentMethod => "اختر طريقتك في الدفع";
  @override
  String get refundRequest => "طلب ارجاع";
  @override
  String get womanCollections => "مجموعات المرأة";
  @override
  String get orderDetail => "تفاصيل الطلب";
  @override
  String get recents => "الأخيرة";
  @override
  String get generalSetting => "الإعداد العام";
}

class $vi extends S {
  const $vi();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get cancel => "Hủy";
  @override
  String get listMessages => "Danh sách tin nhắn";
  @override
  String get lastNameIsRequired => "Tên không được bỏ trống";
  @override
  String get darkTheme => "Giao diện tối";
  @override
  String get byPrice => "Theo giá";
  @override
  String get emptyWishlistSubtitle => "Chạm vào bất cứ trái tim nào bên cạnh sản phẩm mà bạn yêu thích. Chúng tôi sẽ lưu chúng cho bạn ở đây";
  @override
  String get getNotification => "Lấy thông báo";
  @override
  String get cart => "Giỏ hàng";
  @override
  String get logout => "Đăng xuất";
  @override
  String get recentSearches => "Tìm kiếm gần đây";
  @override
  String get review => "Đang duyệt";
  @override
  String get signInWithEmail => "Đăng nhập bằng ";
  @override
  String get english => "Tiếng Anh";
  @override
  String get payment => "Thanh toán";
  @override
  String get myWishList => "Danh sách ưa thích";
  @override
  String get welcome => "Xin chào";
  @override
  String get selectTheColor => "Chọn màu";
  @override
  String get myCart => "Giỏ hàng";
  @override
  String get firstNameIsRequired => "Họ không được bỏ trống";
  @override
  String get byCategory => "Theo loại";
  @override
  String get continueToReview => "Tiếp tục để kiểm duyệt";
  @override
  String get goBackToReview => "Quay lại kiểm duyệt";
  @override
  String get orderHistory => "Lịch sử đặt hàng";
  @override
  String get featureProducts => "Sản phẩm sắp ra mắt";
  @override
  String get itsOrdered => "Nó đã được đặt";
  @override
  String get backToShop => "Quay lại cửa hàng";
  @override
  String get countryIsRequired => "Tên quốc gia không được bỏ trống";
  @override
  String get signup => "Đăng ký";
  @override
  String get size => "Kích thước";
  @override
  String get subtotal => "Tổng phụ";
  @override
  String get emptyCartSubtitle => "Có vẻ như bạn chưa thêm bất kì sản phẩm nào vào túi. Bắt đầu mua sắm để làm đầy nó.";
  @override
  String get reset => "Khôi phục";
  @override
  String get clearCart => "Xóa giỏ hàng";
  @override
  String get noFavoritesYet => "Chưa có yêu thích nào";
  @override
  String get items => "mặt hàng";
  @override
  String get status => "Trạng thái";
  @override
  String get lastName => "Tên";
  @override
  String get city => "Thành phố";
  @override
  String get login => "Đăng nhập";
  @override
  String get products => "Sản phẩm";
  @override
  String get rateTheApp => "Đánh giá ứng dụậpng";
  @override
  String get goBackToShipping => "Quay lại giao hàng";
  @override
  String get search => "Tìm kiếm";
  @override
  String get arabic => "Tiếng Ả Rập";
  @override
  String get paymentMethods => "Các phương pháp thanh toán";
  @override
  String get addToCart => "Thêm vào giỏ hàng";
  @override
  String get goBackToAddress => "Quay lại đia chỉ";
  @override
  String get share => "Chia sẻ";
  @override
  String get pleaseInput => "Dữ liệu nhập bị thiếu ";
  @override
  String get bagsCollections => "Bộ sưu tập túi xách";
  @override
  String get close => "Đóng";
  @override
  String get email => "Email";
  @override
  String get searchingAddress => "Tìm địa chỉ";
  @override
  String get address => "Địa chỉ";
  @override
  String get placeMyOrder => "Nơi đơn hàng của tôi";
  @override
  String get phoneIsRequired => "Số điện thoại không được bỏ trống";
  @override
  String get vietnamese => "Tiếng việt";
  @override
  String get dontHaveAccount => "Chưa tạo tài khoảng?";
  @override
  String get zipCodeIsRequired => "Mã bưu điện không được bỏ trống";
  @override
  String get streetIsRequired => "Địa chỉ không được bỏ trống";
  @override
  String get shippingAddress => "Địa chỉ giao hàng";
  @override
  String get cityIsRequired => "Tên thành phố không được bỏ trống";
  @override
  String get zipCode => "Mã bưu điện";
  @override
  String get country => "Quốc gia";
  @override
  String get manCollections => "Bộ sưu tập đàn ông";
  @override
  String get youMightAlsoLike => "Bạn có thể thật sự thích";
  @override
  String get showAllMyOrdered => "Hiện thị tất cả đơn hàng đã đặt";
  @override
  String get language => "Ngôn ngữ";
  @override
  String get blog => "Tin Tức";
  @override
  String get continueToPayment => "Tiếp tục để thanh toán";
  @override
  String get buyNow => "Mua ngay";
  @override
  String get shipping => "Đang chuyển hàng";
  @override
  String get productAdded => "Sản phẩm đã được thêm";
  @override
  String get additionalInformation => "Bổ sung thông tin";
  @override
  String get settings => "Cài đặt";
  @override
  String get orderNo => "Nó không được đặt";
  @override
  String get shippingMethod => "Phương pháp giao hàng";
  @override
  String get yourBagIsEmpty => "Không có sản phẩm nào trong túi của bạn";
  @override
  String get stateProvince => "Tỉnh";
  @override
  String get noInternetConnection => "Không có kết nối internet";
  @override
  String get firstName => "Họ";
  @override
  String get phoneNumber => "Số điện thoại";
  @override
  String get seeAll => "Xem tất cả";
  @override
  String get paymentMethod => "Phương pháp thanh toán";
  @override
  String get selectTheQuantity => "Chọn số lượng";
  @override
  String get emailIsRequired => "Địa chỉ email không được bỏ trống";
  @override
  String get orderDate => "Ngày đặt";
  @override
  String get shop => "Cửa hàng";
  @override
  String get color => "Màu";
  @override
  String get noReviews => "Không có phản hồi";
  @override
  String get description => "Mô tả";
  @override
  String get streetName => "Tên địa chỉ";
  @override
  String get total => "Tổng";
  @override
  String get stateIsRequired => "Tên tỉnh không được bỏ trống";
  @override
  String get selectTheSize => "Chọn kích thước";
  @override
  String get readReviews => "Xem phản hồi";
  @override
  String get checkout => "Thanh toán";
  @override
  String get noOrders => "Không có hóa đơn";
  @override
  String get startShopping => "Bắt đầu mua sắm";
  @override
  String get or => "Hoặc";
  @override
  String get saveToWishList => "Lưu vào danh sách ưa thích";
  @override
  String get continueToShipping => "Tiếp tục để giao hàng";
  @override
  String get apply => "Đồng ý";
  @override
  String get searchForItems => "Tìm kiếm mặt hàng";
  @override
  String get chooseYourPaymentMethod => "Chọn phương pháp thanh toán của bạn";
  @override
  String get refundRequest => "Yêu cầu hoàn trả";
  @override
  String get womanCollections => "Bộ sưu tập phụ nữ";
  @override
  String get orderDetail => "Chi tiết đơn hàng";
  @override
  String get recents => "Gần đây";
  @override
  String get generalSetting => "Cài đặt chung";
}

class $en extends S {
  const $en();
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ar", ""),
      Locale("vi", ""),
      Locale("en", ""),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "ar":
          return SynchronousFuture<S>(const $ar());
        case "vi":
          return SynchronousFuture<S>(const $vi());
        case "en":
          return SynchronousFuture<S>(const $en());
        default:
          // NO-OP.
      }
    }
    return SynchronousFuture<S>(const S());
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
